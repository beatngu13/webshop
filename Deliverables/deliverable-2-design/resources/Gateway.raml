#%RAML 0.8
title: API Gateway Service
baseUri: http://localhost
mediaType: application/json
version: v0.1

/user:
  post:
    description: create a new user
    body:
      application/json:
        schema: |
          { 
            "$schema": "http://json-schema.org/draft-04/schema#",
            "id": "http://jsonschema.net",
            "type": "object",
            "required": "true",
            "properties":
              {
                "username": "string",
                "fistname": "string",
                "lastname": "string",
                "password": "string",
                "role": 
                  {
                    "enum": ["admin", "user"]
                  }
              }
          }
        example: |
          {
            "username": "hl端ning",
            "fistname": "Horst",
            "lastname": "L端ning",
            "password": "1234",
            "role": "admin"
          }
  /{id}:
    get:
      description: get a specific user by id
      responses:
        200:
          body:
            application/json:
              schema: |
                { 
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "id": "http://jsonschema.net",
                  "type": "object",
                  "required": "true",
                  "properties":
                    {
                      "id": "integer",
                      "username": "string",
                      "fistname": "string",
                      "lastname": "string",
                      "password": "string",
                      "role": 
                        {
                          "enum": ["admin", "user"]
                        }
                    }
                }
              example: |
                {
                  "id": "1234",
                  "username": "hl端ning",
                  "fistname": "Horst",
                  "lastname": "L端ning",
                  "password": "1234",
                  "role": "admin"
                }

/category:
  post:
    description: create a new category
    body:
      application/json:
        schema: |
          { 
            "$schema": "http://json-schema.org/draft-04/schema#",
            "id": "http://jsonschema.net",
            "type": "object",
            "required": "true",
            "properties":
              {
                "name": "string"
              }
          }
  get:
    description: get all categories
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                  "id": "http://jsonschema.net",
                  "type": "object",
                  "required": "true",
                  "properties":
                  {
                    "categories": ["object"]
                  }
              }
  /{id}:
    delete:
      description: delete a specific category
    get:
      description: get a specific category by id
      responses:
        200:
          body:
            application/json:
              schema: |
                { 
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "id": "http://jsonschema.net",
                  "type": "object",
                  "required": "true",
                  "properties":
                    {
                      "id": "integer",
                      "name": "string"
                    }
                }

/product:
  post:
    description: create a new product
    body:
      application/json:
        schema: |
          { 
            "$schema": "http://json-schema.org/draft-04/schema#",
            "id": "http://jsonschema.net",
            "type": "object",
            "required": "true",
            "properties":
              {
                "name": "string",
                "price": "double",
                "details": "string",
                "category": "integer"
              }
          }
  get:
    description: get all products
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                  "id": "http://jsonschema.net",
                  "type": "object",
                  "required": "true",
                  "properties":
                  {
                    "products": ["object"]
                  }
              }
  /{id}:
    delete:
      description: delete a specific product
    get:
      description: get a specific product by id
      responses:
        200:
          body:
            application/json:
              schema: |
                { 
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "id": "http://jsonschema.net",
                  "type": "object",
                  "required": "true",
                  "properties":
                    {
                      "id": "integer",
                      "name": "string",
                      "price": "double",
                      "details": "string",
                      "category": "integer"
                    }
                }
